pipeline {
  agent any

  environment {
    AWS_REGION = 'us-east-1'
    ECR_REPO_NAME = 'dotnetcoreapp'
    IMAGE_TAG = 'latest'
    AWS_ACCOUNT_ID = '920373030046'
  }

  stages {
    stage('Git') {
      steps {
        git credentialsId: 'alhajgit', url: 'https://github.com/alhaj1986/dotnetcoresamplewebapp.git'
      }
    }

    stage('Build') {
      steps {
        sh 'dotnet build'
      }
    }

    stage('Test') {
      steps {
        sh 'dotnet test ./test/dotnetKonf.Web.Test/dotnetKonf.Web.Test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=../../.sonarqube/coverage/api.opencover.xml'
      }
    }

    stage('Docker Build') {
      steps {
        script {
          docker.build("${env.ECR_REPO_NAME}:${env.IMAGE_TAG}")
        }
      }
    }

    stage('Push to ECR') {
      steps {
        script {
          // Authenticate with ECR
          sh '''
          aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
          '''

          // Tag the Docker image
          sh '''
          docker tag ${ECR_REPO_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${IMAGE_TAG}
          '''

          // Push the Docker image to ECR
          sh '''
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${IMAGE_TAG}
          '''
        }
      }
    }
  }

  post {
    success {
      cleanWs()
    }
  }
}
