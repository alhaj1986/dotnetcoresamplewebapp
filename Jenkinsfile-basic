def buildNumber = env.BUILD_NUMBER.toString()

node {
    stage("Git") {
        git credentialsId: 'alhajgit', url: 'https://github.com/alhaj1986/dotnetcorewebapp.git'
    }
    stage("Sonar Begin") {
        withCredentials([string(credentialsId: 'sonar-token', variable: 'DOTNETKONF_SONAR_TOKEN')]) {
            sh 'dotnet sonarscanner begin /k:"dotnetkonf-test" /d:sonar.host.url="https://cq-test.monofor.com" /d:sonar.login="$DOTNETKONF_SONAR_TOKEN" /d:sonar.cs.opencover.reportsPaths=".sonarqube/coverage/api.opencover.xml"'
        }
    }
    stage("Build") {
        sh "dotnet build"
    }    
    stage("Test"){
        sh 'dotnet test ./test/sampleapp.Web.Test/sampleapp.Web.Test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=../../.sonarqube/coverage/api.opencover.xml'
    }
    stage("Sonar End") {
        withCredentials([string(credentialsId: 'sonar-token', variable: 'DOTNETKONF_SONAR_TOKEN')]) {
            sh 'dotnet sonarscanner end /d:sonar.login="$DOTNETKONF_SONAR_TOKEN"'
        }
    }
    stage('Build') {
      steps {
        sh 'dotnet build DotNetCorePipeline.sln'
      }
    }


    stage('Docker Build') {
      steps {
        script {
          docker.build("${env.ECR_REPO_NAME}:${env.IMAGE_TAG}")
        }
      }
    }

   stage('Push to ECR') {
      steps {
        script {
          // Authenticate with ECR
          sh '''
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 920373030046.dkr.ecr.us-east-1.amazonaws.com
          '''

          // Tag the Docker image
          sh '''
          docker tag dotnetcoreapp:latest 920373030046.dkr.ecr.us-east-1.amazonaws.com/dotnetcoreapp:latest
          '''

          // Push the Docker image to ECR
          sh '''
          docker push 920373030046.dkr.ecr.us-east-1.amazonaws.com/dotnetcoreapp:latest
          '''
        }
      }
    }
  }

  post {
    success {
      cleanWs()
    }
  }
}
